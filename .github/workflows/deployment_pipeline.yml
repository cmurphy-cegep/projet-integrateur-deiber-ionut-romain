name: Deployment pipeline
on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main

jobs:
  deployment_pipeline:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [ 'backend', 'frontend' ]
        database-name:
          - recettesrodrigo
        database-password:
          - postgres
        database-user:
          - postgres
        database-host:
          - 127.0.0.1
        database-port:
          - 5432

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ matrix.database-name }}
          POSTGRES_USER: ${{ matrix.database-user }}
          POSTGRES_PASSWORD: ${{ matrix.database-password }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: ./${{ matrix.environment }}
        run: npm install

      - name: Set up database
        if: ${{ matrix.environment == 'backend' }}
        env:
          DATABASE_USER: ${{ matrix.database-user }}
          DATABASE_PASSWORD: ${{ matrix.database-password }}
          DATABASE_HOST: ${{ matrix.database-host }}
          DATABASE_PORT: ${{ matrix.database-port }}
          POSTGRES_DB: ${{ matrix.database-name }}
        run: |
          psql -h $DATABASE_HOST -U $DATABASE_USER -d $POSTGRES_DB -f 03_recettesrodrigo_ddl.sql
          psql -h $DATABASE_HOST -U $DATABASE_USER -d $POSTGRES_DB -f 04_insert_donnees.sql


      - name: Run tests
        working-directory: ./${{ matrix.environment }}
        run: npm run test

      - name: Build frontend application
        if: ${{ matrix.environment == 'frontend' }}
        working-directory: ./${{ matrix.environment }}
        run: npm run build