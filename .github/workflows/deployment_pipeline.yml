name: Deployment pipeline
on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      DB_DATABASE: recettesrodrigo
      DB_USER: postgres
      DB_PASSWORD: postgres

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ env.DB_DATABASE }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up database
        env:
          PGPASSWORD: ${{ env.DB_PASSWORD }}
        run: |
          psql -h $DB_HOST -U $DB_USER -d $DB_DATABASE -f ./database/03_recettesrodrigo_ddl.sql
          psql -h $DB_HOST -U $DB_USER -d $DB_DATABASE -f ./database/04_insert_donnees.sql

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: Fix vulnerabilities
        working-directory: ./backend
        run: npm audit fix

      #      - name: Run eslint
      #        working-directory: ./backend
      #        run: npm run eslint

      - name: Run backend tests
        working-directory: ./backend
        run: npm run test-coverage

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage/lcov.info

      - name: Start backend
        working-directory: ./backend
        run: npm run start &

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      #      - name: Run eslint
      #        working-directory: ./frontend
      #        run: npm run eslint

      - name: Fix vulnerabilities
        working-directory: ./frontend
        run: npm audit fix

      - name: Wait for backend to be ready
        run: |
          echo "Waiting for backend to be ready..."
          until curl -s http://localhost:3000/health; do sleep 5; done

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm run test

      - name: Build frontend application
        working-directory: ./frontend
        run: npm run build
